package comu;

import java.util.Arrays;
import java.util.Random;

public class FactoriaPuzzle {

	byte C,R;
	byte[] Ls;
	
	boolean Model;	
	
	Random rnd;

	public FactoriaPuzzle(int c,int r,byte[] ls){
		C=(byte)c;
		R=(byte)r;
		Ls=ls.clone();
		rnd = new Random();
	}
	
	public FactoriaPuzzle Model(boolean m){
		Model = m;		
		
		return this;
	}
	
	public void Genera(){
	
		shipmodel.Flota F;
		Mostrades[] M = new Mostrades[0];		
						
		shipmodel.ResoledorPuzzle RP;
		
		long t1,t2;
		boolean fet = false;
		
		do{
			F = new shipmodel.Flota(C,R,Ls);
						
			RP = new shipmodel.ResoledorPuzzle(F.SR,F.SC,M,Ls);
			
			t1 = System.currentTimeMillis();
			
			System.out.println("Checking Resol(2)");
			RP.Resol(2);
	
			t1 = System.currentTimeMillis()-t1;
			
			t2 = System.currentTimeMillis();
			
			System.out.println("Checking Resol(1)");			
			RP.Resol(1);
			
			t2 = System.currentTimeMillis()-t2;
						
			fet = t1 < 2*t2;
			 
		}while(!fet);	
		
		System.out.println("Ok");
		
		byte x,y;
		int s;
		
		if (RP.Resol(2)!=1)
		do {								
			x = (byte)rnd.nextInt(C);
			y = (byte)rnd.nextInt(R);
			
			/*if (F.SR[x]!=0&&F.SC[y]!=0&&F.notocavaixell(x,y))
			{*/			
				M = Arrays.copyOf(M,M.length+1);						
				M[M.length-1] = new Mostrades(x,y,F.c(x,y));
			
				s = RP.M(M).Resol(2);
			
				if (s==0) { M = Arrays.copyOf(M,M.length-1); s = 2;}
			/*}
			else
			s=2;*/ 
				
		} while(s!=1);
		
		char bak;
		
		System.out.println("---");
		
		for (int n=0;n<M.length;n++){
			bak = M[n].v;
			M[n].v = K.I;
			
			if (RP.M(M).Resol(2)!=1) M[n].v = bak;
		}
		
		char[][] G = new char[C][R];
		
		for (char[] g:G)
		Arrays.fill(g,K.I);
		
		for (Mostrades m:M)
			G[m.x][m.y] = m.v;
			
		String r="";
		
		for (byte j=0;j<R;j++) {
		
			for (byte i=0;i<C;i++) 
				r+=G[i][j] + " ";
				
			r += F.SC[j] + "\n";
		}		
		
		r+="\n";
		for (byte i=0;i<C;i++)
			r+=F.SR[i] + " ";
			
		System.out.println(r);				
	}		
}
