package comu;

import java.util.Arrays;
import java.util.Random;

import shipmodel.Flota;

public class FactoriaPuzzle {

	byte C,R;
	byte[] Ls;
	
	boolean Model;	
	
	Random rnd;

	public FactoriaPuzzle(int c,int r,byte[] ls){
		C=(byte)c;
		R=(byte)r;
		Ls=ls.clone();
		rnd = new Random();
	}
	
	public FactoriaPuzzle Model(boolean m){
		Model = m;		
		
		return this;
	}
	
	public BSPuzzle Genera(){
	
		return GeneraShipModel();  
	}			
	
	BSPuzzle GeneraShipModel(){
	
		long t = System.currentTimeMillis();
	
		Model = K.SHIP_MODEL;
		
		Flota F;
		Mostrades[] M = new Mostrades[0];
		BSPuzzle P;
				
		Random rnd = new Random();
					
		shipmodel.Resoledor RP;
		
		int s;		
		
		F = new Flota(C,R,Ls);
		P = new BSPuzzle(F.SR,F.SC,M,Ls);						
		RP = new shipmodel.Resoledor(P);
		long cmb=0,cmbd;									
		byte x,y;
		cmb = RP.prepara();
		
		do { 
			System.out.println(cmb);
			
			x = (byte)rnd.nextInt(C);
			y = (byte)rnd.nextInt(R);
			
			for (Mostrades ci:M)
			if (ci.x==x&&ci.y==y) continue;			
			
			M = Arrays.copyOf(M,M.length+1);
			M[M.length-1] = new Mostrades(x,y,F.c(x,y));
			
			RP.M(M);
			cmbd = RP.prepara();
			
			if (cmbd>cmb) { M = Arrays.copyOf(M,M.length-1);}
			else cmb=cmbd;			

		} while (cmb > 10000);
			
		s=0;
			
		do {				
			System.out.println(RP.tr+":"+s);
			
			x = (byte)rnd.nextInt(C);
			y = (byte)rnd.nextInt(R);
			
			for (Mostrades ci:M)
			if (ci.x==x&&ci.y==y) continue;

			M = Arrays.copyOf(M,M.length+1);
			M[M.length-1] = new Mostrades(x,y,F.c(x,y));
							
			RP.M(M);			
			
			s = RP.Resol(2);
			
			if (s==0){ M = Arrays.copyOf(M,M.length-1);}
										
		} while(s!=1);
		
		char bak;
		
		System.out.println("---");
				
		for (int n=0;n<M.length;n++){
			
			System.out.println(RP.tr);
				
			bak = M[n].v;
			M[n].v = K.I;
			
			RP.M(M);
			
			if (RP.Resol(2)!=1) M[n].v = bak;
		}
		
		char[][] G = new char[C][R];
		
		for (char[] g:G)
		Arrays.fill(g,K.I);
		
		for (Mostrades ci:M)
			G[ci.x][ci.y] = ci.v;
			
		String r="";
		
		for (byte j=0;j<R;j++) {
		
			for (byte i=0;i<C;i++) 
				r+=G[i][j] + " ";
				
			r += F.SC[j] + "\n";
		}		
		
		r+="\n";
		for (byte i=0;i<C;i++)
			r+=F.SR[i] + " ";
			
		System.out.println(r);		
		
		System.out.println("Generate time :" + ((System.currentTimeMillis()-t)/1000));
								
		return new BSPuzzle(F.SR,F.SC,M,Ls);		
	}
}
