
public class Vaixell {
	byte L;
	Posicions ps;
	
	public Vaixell(byte l){
		L=l;
		ps = new Posicions();
	}
	
	public Vaixell(byte l,Posicio...r){	
		L=l;
		ps = new Posicions(r);		
	}
	
	public Posicio r(){
		return ps.r();
	}
	
	public Index rf(){
		if (r()==null) return null;
	
		return ps.r().J(L);
	}
		
	public String toString(){
		return "L="+L+":\n"+ps.toString();
	}	
	
	public boolean choca(Vaixell v){
		boolean r = false;
		byte i,j;
		
		for (i=r().x;i<=r().J(L).x;i++)
		for (j=r().y;j<=r().J(L).y;j++)
			r|=v.dintre(i,j);
			
		for (i=v.r().x;i<=v.r().J(L).x;i++)
		for (j=v.r().y;j<=v.r().J(L).y;j++)
			r|=dintre(i,j);
			
		return r;
		
	}		
	
	public boolean dintre(byte i,byte j){
		if (r()==null) return false;
		
		byte xo,yo,xf,yf;
			
		xo = (byte)(r().x-1);
		yo = (byte)(r().y-1);
		xf = (byte)(r().J(L).x+1);
		yf = (byte)(r().J(L).y+1);
										
		return (xo<=i&&i<=xf&&yo<=j&&j<=yf);
	}
	
	public boolean tocat(byte i,byte j){		
		return (r().x<=i&&i<=r().J(L).x&&r().y<=j&&j<=r().J(L).y);		
	}
	
	public char c(byte i,byte j){
			
		char r='·';
			
		if (r()==null) return r;
		
		r = dintre(i,j)?'~':'·';
		
		if (L==1&&i==r().x&&j==r().y) return 'O';
		

		if (tocat(i,j))
			if (i==r().x&&j==r().y) return r().o?'<':'A';
			else
				if (i==r().J(L).x&&j==r().J(L).y) return r().o?'>':'V';
				else
					return 'X';				
		
		return r;								
	}
}
