public class Flota {
	Vaixell[] V;
	byte C,R;
	
	public Flota(int c,int r,byte[] l){	
		C=(byte)c;
		R=(byte)r;
	
		V= new Vaixell[l.length];
		
		for (byte n=0;n<l.length;n++)
		V[n] = new Vaixell(l[n]);
		
		Coloca();	
		
	}	
	
	public void Coloca(){
	
		boolean fet = false;
		
		System.out.println("Coloca()");
		
		while (!fet)
		{	
			System.out.print(".");
		
			Posicions P = ShufflePosicions();
			
			for (Vaixell v:V)
				v = new Vaixell(v.L);
		
			for (Vaixell v:V) {							
				for (Posicio p:P.P)
				{				
					if (DintreLimits(v,p)) {
					
						v.ps = new Posicions(p);
						treuVaixell(v,P);						

						break;						
					}
				}
			}
			
			fet = true;		
			
			for (Vaixell v:V)
				fet &= v.r()!=null;
		}		
		
		String s="\n";
		
		for (Vaixell v:V)
		s+="Vaixell "+v.L+":"+v.r().toString()+ "-"+v.r().J(v.L).toString()+"\n";
		
		System.out.println(s);		
				
		s="";
		
		for (byte j=0;j<R;j++)
		{
			for (byte i=0;i<C;i++)
			{
				char m='·';
				
				for (Vaixell v:V)
					if (v.c(i,j)!='·') m=v.c(i,j);
				
				s+=m;
			}			
			s+="\n";
		}
		
		System.out.println(s);
		
	}
	
	public void treuVaixell(Vaixell v,Posicions P){
	
		if (v.r()==null) return;
		
		byte xo = (byte)(v.r().x-1),
			 yo = (byte)(v.r().y-1),
			 xf = (byte)(v.rf().x+1),
			 yf = (byte)(v.rf().y+1);
		
		for (byte i=xo;i<=xf;i++)
		for (byte j=yo;j<=yf;j++)
			P.remove(i,j);
	}
	
	public boolean DintreLimits(Vaixell v,Posicio p){
	
		return (p.x>=0&&p.J(v.L).x<C&&p.y>=0&&p.J(v.L).y<R);
	}
	
	public boolean CheckPosicio(Vaixell v,Vaixell[] V,Posicio p){
		boolean r = true;
		
		Vaixell d= new Vaixell(v.L,p);
				
		for (Vaixell l:V)
			r&=!d.choca(l);
		
		return r;
	}
	
	public Posicions ShufflePosicions(){
		int i,j;					
		Posicions P = new Posicions();
		
		for (j=0;j<R;j++)
		for (i=0;i<C;i++)
		{
			P.add(i,j,K.HOR);
			P.add(i,j,K.VER);
		}
	
		return P.Shuffle();
	}
}
